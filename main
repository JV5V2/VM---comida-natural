import serial
import MFRC522
import signal


def main()
def leitura_codigo_barras()

# Configurações da porta serial
porta_serial = '/dev/ttyACM0'  # Substitua pela porta correta
baud_rate = 9600  # Taxa de transmissão (baud rate) do leitor

# Abre a porta serial
try:
    leitor = serial.Serial(porta_serial, baud_rate, timeout=1)
    print(f"Conectado ao leitor de código de barras na porta {porta_serial}.")
except Exception as e:
    print(f"Erro ao abrir a porta serial: {e}")
    exit(1)

try:
    print("Aguardando leitura de código de barras...")
    while True:
        # Lê os dados da porta serial
        codigo = leitor.readline().decode('utf-8').strip()
        if codigo:
            print(f"Código de barras lido: {codigo}")
except KeyboardInterrupt:
    print("Leitura interrompida pelo usuário.")
finally:
    # Fecha a porta serial
    leitor.close()
    print("Porta serial fechada.")

def rfid()

continue_reading = True

# UID autorizado
AUTHORIZED_TAG = "BA4D9316"

# Função para converter o UID em uma string (corrigida para ordem correta)
def uidToString(uid):
    mystring = ""
    for i in uid:
        mystring += format(i, '02X')  # Concatena na ordem correta
    return mystring

# Capture SIGINT for cleanup when the script is aborted
def end_read(signal, frame):
    global continue_reading
    print("Ctrl+C captured, ending read.")
    continue_reading = False

# Hook the SIGINT
signal.signal(signal.SIGINT, end_read)

# Create an object of the class MFRC522
MIFAREReader = MFRC522.MFRC522()

# Welcome message
print("Welcome to the MFRC522 data read example")
print("Press Ctrl-C to stop.")

# This loop keeps checking for chips.
# If one is near it will get the UID and authenticate
while continue_reading:

    # Scan for cards
    (status, TagType) = MIFAREReader.MFRC522_Request(MIFAREReader.PICC_REQIDL)

    # If a card is found
    if status == MIFAREReader.MI_OK:
        print("Card detected")

        # Get the UID of the card
        (status, uid) = MIFAREReader.MFRC522_SelectTagSN()
        # If we have the UID, continue
        if status == MIFAREReader.MI_OK:
            uid_str = uidToString(uid)
            print("Card read UID: %s" % uid_str)

            # Verifica se a tag é autorizada
            if uid_str == AUTHORIZED_TAG:
                print("Tag autorizada!")
            else:
                print("Tag não autorizada!")
        else:
            print("Authentication error")
            print("Authentication error")

def eletroima()
